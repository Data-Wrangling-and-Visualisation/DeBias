volumes:
  message_queue_volume:
    driver: local
  key_value_volume:
    driver: local
  postgres_volume:
    driver: local

services:
  scraper:
    build:
      context: .
      dockerfile: scraper.dockerfile
    volumes:
      - ./debias/scraper/config.toml:/app/config.toml
    command: "uv run faststream run debias.scraper:app --config=/app/config.toml --workers 1"
    depends_on:
      - message-queue
      - postgres
      - key-value

  server:
    build:
      context: .
      dockerfile: server.dockerfile
    volumes:
      - ./debias/server/config.toml:/app/config.toml
    ports:
      - "127.0.0.1:8080:8080"
    environment:
      - server.config=/app/config.toml
    command: "uv run litestar --app debias.server:app run --host 0.0.0.0 --port 8080"
    depends_on:
      - postgres

  renderer:
    build:
      context: .
      dockerfile: renderer.dockerfile
    volumes:
      - ./debias/renderer/config.toml:/app/config.toml
    command: "uv run faststream run debias.renderer:app --config=/app/config.toml --workers 1"
    depends_on:
      - message-queue
      - postgres
      - key-value

  processor:
    build:
      context: .
      dockerfile: processor.dockerfile
    volumes:
      - ./debias/processor/config.toml:/app/config.toml
    command: bash -c "while true; do sleep 1; done"
    
    # "uv run faststream run debias.processor:app --config=/app/config.toml --workers 1"

  message-queue:
    image: nats:2.11-linux
    ports:
      - "127.0.0.1:4222:4222"
      - "127.0.0.1:8222:8222"
    command: "--jetstream --store_dir /data"
    volumes:
      - message_queue_volume:/data

  key-value:
    image: valkey/valkey:8.1
    ports:
      - "127.0.0.1:6379:6379"
    environment:
      - VALKEY_DB=0
    volumes:
      - key_value_volume:/data
    command: ["--appendonly", "yes"]

  postgres:
    image: postgres:16
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      - POSTGRES_USER=${PG_USERNAME}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
    volumes:
      - postgres_volume:/var/lib/postgresql/data
